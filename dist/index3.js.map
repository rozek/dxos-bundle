{"version":3,"mappings":"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","names":["InvalidTokenError","p","code","base64UrlDecode","str","output","b64DecodeUnicode","jwtDecode","token","options","pos","part","decoded","e","InitAuthSequenceResponse","InitAuthSequenceResult","_ts_decorate","desc","decorators","i","c","d","target","key","__dxlog_file","getUnixSocket","profile","protocol","getProfilePath","DX_RUNTIME","AgentClientServiceProvider","_profile","clientServiceBundle","WebsocketRpcClient2","error","err","log","a","f","trace","_ts_decorate2","__dxlog_file2","Config","signalTelemetryEnabled","networking","setupNetworking","config","services","observabilityGroup","params","signalMetadata","MemorySignalManager","WebsocketSignalManager","__vitePreload","MemorySignalManagerContext","n","createSimplePeerTransportFactory","MemoryTransportFactory","signalManager2","signals","transportFactory2","log2","Event2","clientServiceBundle2","setIdentityTags","v","LocalClientServices","trace2","ClientServicesProviderResource2","closed","Event3","dxRpcClient","url","authenticationToken","clientServiceBundle3","log3","__dxlog_file3","ApiError","IFrameManager","source","onMessage","PublicKey","createIFrame","iframeId","event","shellStyles","value","ShellManager","_iframeManager","_channel","ShellDisplay","request","__dxlog_file4","RPC_TIMEOUT","log4","iframe","reload","display","origin","appServiceBundle","port","IFrameClientServicesHost","DEFAULT_VAULT_URL","vault","DEFAULT_INTERNAL_CHANNEL","Event5","timeout","RemoteServiceConnectionTimeout","channel","payload","loaded","server","createBundledRpcServer","messageChannel","_ts_decorate3","__dxlog_file5","ClientServicesProxy","invariant2","clientServiceBundle4","createProtoRpcPeer2","asyncTimeout2","RemoteServiceConnectionTimeout2","_ts_decorate4","__dxlog_file6","IFrameClientServicesProxy","DEFAULT_VAULT_URL2","DEFAULT_SHELL_CHANNEL2","PROXY_CONNECTION_TIMEOUT2","logFilter","PublicKey2","parseFilter","Trigger2","ready","asyncTimeout3","RemoteServiceConnectionTimeout3","createWorkerPort2","log5","Trace","entry","LogLevel","trace5","__dxlog_file7","fromIFrame","Config2","log6","ApiError2","safariCheck","fromHost","__dxlog_file8","fromWorker","Config3","WorkerClientServices","Event8","createWorker","clientServiceBundle5","SharedWorkerConnection","ports","Trigger3","worker","command","createWorkerPort3","log7","mapLogMeta","_ts_decorate6","trace6","synchronized2","meta","__dxlog_file9","createClientServices","remote","log8","devices","spaces","shellManager","layout","ShellLayout","resolve","context","ShellDisplay2","identity","initialDevices","ComplexSet","device","spaceKey","space","space2","initialMembers","members","member","invitationCode","__dxlog_file10","defaultConfig","COMPOSER_BETA_COOKIE_NAME","_clientConfig","runtimeAgentHostingConfig","authToken","composerBetaJwt","cookies","req","invariant3","deviceKey","authDeviceCreds","cred","WebsocketRpcClient","schema","log9","agentmanagerKey","result","nonce","agentmanagerAccessCreds","credsToPresent","ProviderApiError","credential","type","predicate","identityKey","res","agentID","_ts_decorate7"],"ignoreList":[0,1,2,3],"sources":["../node_modules/@dxos/client/dist/lib/browser/chunk-4LGJGFVR.mjs","../node_modules/jwt-decode/build/esm/index.js","../node_modules/@dxos/protocols/dist/esm/src/proto/gen/dxos/service/agentmanager.js","../node_modules/@dxos/client/dist/lib/browser/chunk-D6UVCTHY.mjs"],"sourcesContent":["// packages/sdk/client/src/lock-key.ts\nvar LOCK_KEY = \"dxos-client-worker\";\n\nexport {\n  LOCK_KEY\n};\n//# sourceMappingURL=chunk-4LGJGFVR.mjs.map\n","export class InvalidTokenError extends Error {\n}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n        return \"%\" + code;\n    }));\n}\nfunction base64UrlDecode(str) {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"base64 string is not of the correct length\");\n    }\n    try {\n        return b64DecodeUnicode(output);\n    }\n    catch (err) {\n        return atob(output);\n    }\n}\nexport function jwtDecode(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n    }\n    options || (options = {});\n    const pos = options.header === true ? 0 : 1;\n    const part = token.split(\".\")[pos];\n    if (typeof part !== \"string\") {\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n    }\n    let decoded;\n    try {\n        decoded = base64UrlDecode(part);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n    }\n    try {\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n    }\n}\n","export var InitAuthSequenceResponse;\n(function (InitAuthSequenceResponse) {\n    /**\n     * Defined in:\n     *   {@link file://./../../../dxos/service/agentmanager.proto}\n     */\n    let InitAuthSequenceResult;\n    (function (InitAuthSequenceResult) {\n        InitAuthSequenceResult[InitAuthSequenceResult[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n        InitAuthSequenceResult[InitAuthSequenceResult[\"SUCCESS\"] = 1] = \"SUCCESS\";\n        InitAuthSequenceResult[InitAuthSequenceResult[\"NOT_AUTHORIZED\"] = 2] = \"NOT_AUTHORIZED\";\n        InitAuthSequenceResult[InitAuthSequenceResult[\"ERROR\"] = 3] = \"ERROR\";\n    })(InitAuthSequenceResult = InitAuthSequenceResponse.InitAuthSequenceResult || (InitAuthSequenceResponse.InitAuthSequenceResult = {}));\n})(InitAuthSequenceResponse || (InitAuthSequenceResponse = {}));\n//# sourceMappingURL=agentmanager.js.map","import {\n  LOCK_KEY\n} from \"./chunk-4LGJGFVR.mjs\";\nimport {\n  RPC_TIMEOUT\n} from \"./chunk-UFEX2AOY.mjs\";\n\n// packages/sdk/client/src/services/index.ts\nimport { DEFAULT_VAULT_ORIGIN, DEFAULT_VAULT_URL as DEFAULT_VAULT_URL3 } from \"@dxos/client-protocol\";\nimport { SystemStatus } from \"@dxos/protocols/proto/dxos/client/services\";\nimport { ShellDisplay as ShellDisplay3, ShellLayout as ShellLayout2 } from \"@dxos/protocols/proto/dxos/iframe\";\n\n// packages/sdk/client/src/services/agent.ts\nimport { Event } from \"@dxos/async\";\nimport { DX_RUNTIME, ENV_DX_PROFILE, ENV_DX_PROFILE_DEFAULT, clientServiceBundle, getProfilePath } from \"@dxos/client-protocol\";\nimport { ClientServicesProviderResource } from \"@dxos/client-services\";\nimport { log } from \"@dxos/log\";\nimport { trace } from \"@dxos/tracing\";\nfunction _ts_decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n    r = Reflect.decorate(decorators, target, key, desc);\n  else\n    for (var i = decorators.length - 1; i >= 0; i--)\n      if (d = decorators[i])\n        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nvar __dxlog_file = \"/home/runner/work/dxos/dxos/packages/sdk/client/src/services/agent.ts\";\nvar getUnixSocket = (profile, protocol = \"unix\") => `${protocol}://` + getProfilePath(DX_RUNTIME, profile, \"agent.sock\");\nvar fromAgent = ({ profile = process.env[ENV_DX_PROFILE] ?? ENV_DX_PROFILE_DEFAULT } = {}) => {\n  return new AgentClientServiceProvider(profile);\n};\nvar AgentClientServiceProvider = class {\n  constructor(_profile) {\n    this._profile = _profile;\n    this.closed = new Event();\n  }\n  get descriptors() {\n    return clientServiceBundle;\n  }\n  get services() {\n    return this._client.rpc;\n  }\n  async open() {\n    const { WebsocketRpcClient: WebsocketRpcClient2 } = await import(\"@dxos/websocket-rpc\");\n    this._client = new WebsocketRpcClient2({\n      url: getUnixSocket(this._profile, \"ws+unix\"),\n      requested: clientServiceBundle,\n      exposed: {},\n      handlers: {}\n    });\n    this._client.error.on((error) => {\n      this.closed.emit(error);\n    });\n    await this._client.open();\n  }\n  async close() {\n    try {\n      await this._client?.close();\n    } catch (err) {\n      log.warn(\"Failed to close\", err, {\n        F: __dxlog_file,\n        L: 72,\n        S: this,\n        C: (f, a) => f(...a)\n      });\n    }\n  }\n};\nAgentClientServiceProvider = _ts_decorate([\n  trace.resource({\n    annotation: ClientServicesProviderResource\n  })\n], AgentClientServiceProvider);\n\n// packages/sdk/client/src/services/client-services-factory.tsx\nimport { log as log8 } from \"@dxos/log\";\n\n// packages/sdk/client/src/services/local-client-services.ts\nimport { Event as Event2, synchronized } from \"@dxos/async\";\nimport { clientServiceBundle as clientServiceBundle2 } from \"@dxos/client-protocol\";\nimport { ClientServicesProviderResource as ClientServicesProviderResource2 } from \"@dxos/client-services\";\nimport { Config } from \"@dxos/config\";\nimport { Context } from \"@dxos/context\";\nimport { log as log2 } from \"@dxos/log\";\nimport { setIdentityTags } from \"@dxos/messaging\";\nimport { createLibDataChannelTransportFactory } from \"@dxos/network-manager\";\nimport { trace as trace2 } from \"@dxos/tracing\";\nfunction _ts_decorate2(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n    r = Reflect.decorate(decorators, target, key, desc);\n  else\n    for (var i = decorators.length - 1; i >= 0; i--)\n      if (d = decorators[i])\n        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nvar __dxlog_file2 = \"/home/runner/work/dxos/dxos/packages/sdk/client/src/services/local-client-services.ts\";\nvar fromHost = async (config = new Config(), params, observabilityGroup, signalTelemetryEnabled) => {\n  const networking = await setupNetworking(config, {}, () => signalTelemetryEnabled ? {\n    ...services.signalMetadataTags,\n    ...observabilityGroup ? {\n      group: observabilityGroup\n    } : {}\n  } : {});\n  const services = new LocalClientServices({\n    config,\n    ...networking,\n    ...params\n  });\n  return services;\n};\nvar setupNetworking = async (config, options = {}, signalMetadata) => {\n  const { MemorySignalManager, MemorySignalManagerContext, WebsocketSignalManager } = await import(\"@dxos/messaging\");\n  const { createSimplePeerTransportFactory, MemoryTransportFactory } = await import(\"@dxos/network-manager\");\n  const signals = config.get(\"runtime.services.signaling\");\n  if (signals) {\n    const {\n      signalManager: signalManager2 = new WebsocketSignalManager(signals, signalMetadata),\n      // TODO(nf): configure better\n      transportFactory: transportFactory2 = process.env.MOCHA_ENV === \"nodejs\" ? createLibDataChannelTransportFactory({\n        iceServers: config.get(\"runtime.services.ice\")\n      }) : createSimplePeerTransportFactory({\n        iceServers: config.get(\"runtime.services.ice\")\n      })\n    } = options;\n    return {\n      signalManager: signalManager2,\n      transportFactory: transportFactory2\n    };\n  }\n  log2.warn(\"P2P network is not configured.\", void 0, {\n    F: __dxlog_file2,\n    L: 82,\n    S: void 0,\n    C: (f, a) => f(...a)\n  });\n  const signalManager = new MemorySignalManager(new MemorySignalManagerContext());\n  const transportFactory = MemoryTransportFactory;\n  return {\n    signalManager,\n    transportFactory\n  };\n};\nvar LocalClientServices = class {\n  constructor(params) {\n    this.closed = new Event2();\n    this._ctx = new Context();\n    this.signalMetadataTags = {\n      runtime: \"local-client-services\"\n    };\n    this._isOpen = false;\n    this._params = params;\n    if (typeof window === \"undefined\") {\n      this.signalMetadataTags.origin = \"undefined\";\n    } else {\n      if (globalThis.__args) {\n        this.signalMetadataTags.runtime = \"native\";\n        this.signalMetadataTags.origin = window.location.origin;\n      } else {\n        this.signalMetadataTags.origin = window.location.origin;\n      }\n    }\n  }\n  get descriptors() {\n    return clientServiceBundle2;\n  }\n  get services() {\n    return this._host?.services ?? {};\n  }\n  get host() {\n    return this._host;\n  }\n  async open() {\n    if (this._isOpen) {\n      return;\n    }\n    const { ClientServicesHost } = await import(\"@dxos/client-services\");\n    this._host = new ClientServicesHost({\n      ...this._params,\n      callbacks: {\n        ...this._params.callbacks,\n        onReset: async () => {\n          this.closed.emit(void 0);\n          await this._params.callbacks?.onReset?.();\n        }\n      }\n    });\n    await this._host.open(this._ctx);\n    this._isOpen = true;\n    setIdentityTags({\n      identityService: this._host.services.IdentityService,\n      devicesService: this._host.services.DevicesService,\n      setTag: (k, v) => {\n        this.signalMetadataTags[k] = v;\n      }\n    });\n  }\n  async close() {\n    if (!this._isOpen) {\n      return;\n    }\n    await this._host?.close();\n    this._isOpen = false;\n  }\n};\n_ts_decorate2([\n  trace2.info()\n], LocalClientServices.prototype, \"_isOpen\", void 0);\n_ts_decorate2([\n  synchronized\n], LocalClientServices.prototype, \"open\", null);\n_ts_decorate2([\n  synchronized\n], LocalClientServices.prototype, \"close\", null);\nLocalClientServices = _ts_decorate2([\n  trace2.resource({\n    annotation: ClientServicesProviderResource2\n  })\n], LocalClientServices);\n\n// packages/sdk/client/src/services/socket.ts\nimport { Event as Event3 } from \"@dxos/async\";\nimport { clientServiceBundle as clientServiceBundle3 } from \"@dxos/client-protocol\";\nimport { log as log3 } from \"@dxos/log\";\nimport { ApiError } from \"@dxos/protocols\";\nvar __dxlog_file3 = \"/home/runner/work/dxos/dxos/packages/sdk/client/src/services/socket.ts\";\nvar fromSocket = async (url, authenticationToken) => {\n  const closed = new Event3();\n  let dxRpcClient;\n  return {\n    get closed() {\n      return closed;\n    },\n    get descriptors() {\n      return clientServiceBundle3;\n    },\n    get services() {\n      return dxRpcClient.rpc;\n    },\n    open: async () => {\n      const { WebsocketRpcClient: WebsocketRpcClient2 } = await import(\"@dxos/websocket-rpc\");\n      dxRpcClient = new WebsocketRpcClient2({\n        url,\n        authenticationToken,\n        requested: clientServiceBundle3,\n        exposed: {},\n        handlers: {}\n      });\n      dxRpcClient.error.on(async (error) => {\n        log3.warn(\"websocket rpc client error\", {\n          error\n        }, {\n          F: __dxlog_file3,\n          L: 42,\n          S: void 0,\n          C: (f, a) => f(...a)\n        });\n        if (error.message.includes(\"401\")) {\n          log3.warn(\"websocket authentication failed\", void 0, {\n            F: __dxlog_file3,\n            L: 45,\n            S: void 0,\n            C: (f, a) => f(...a)\n          });\n        }\n        closed.emit(new ApiError(\"websocket error\"));\n      });\n      await dxRpcClient.open();\n    },\n    close: async () => {\n      await dxRpcClient.close();\n    }\n  };\n};\n\n// packages/sdk/client/src/services/utils.ts\nimport { Config as Config2 } from \"@dxos/config\";\nimport { log as log6 } from \"@dxos/log\";\nimport { ApiError as ApiError2 } from \"@dxos/protocols\";\nimport { getAsyncValue, safariCheck } from \"@dxos/util\";\n\n// packages/sdk/client/src/services/iframe-service-host.ts\nimport { Trigger, Event as Event5, asyncTimeout } from \"@dxos/async\";\nimport { DEFAULT_VAULT_URL, DEFAULT_INTERNAL_CHANNEL, PROXY_CONNECTION_TIMEOUT } from \"@dxos/client-protocol\";\nimport { RemoteServiceConnectionTimeout } from \"@dxos/protocols\";\nimport { createBundledRpcServer } from \"@dxos/rpc\";\nimport { createWorkerPort } from \"@dxos/rpc-tunnel\";\nimport { trace as trace3 } from \"@dxos/tracing\";\n\n// packages/sdk/client/src/services/iframe-manager.ts\nimport { PublicKey } from \"@dxos/keys\";\nimport { createIFrame } from \"@dxos/rpc-tunnel\";\nvar IFrameManager = class {\n  constructor({ source, onOpen, onMessage }) {\n    this._source = source;\n    this._onOpen = onOpen;\n    this._onMessage = onMessage;\n    this._messageHandler = this._messageHandler.bind(this);\n  }\n  get source() {\n    return this._source;\n  }\n  get iframe() {\n    return this._iframe;\n  }\n  async open() {\n    if (this._iframe) {\n      return;\n    }\n    window.addEventListener(\"message\", this._messageHandler);\n    const iframeId = `__DXOS_CLIENT_${PublicKey.random().toHex()}__`;\n    this._iframe = createIFrame(this._source.toString(), iframeId, {\n      allow: \"clipboard-read; clipboard-write\"\n    });\n    await this._onOpen?.();\n  }\n  async close() {\n    window.removeEventListener(\"message\", this._messageHandler);\n    this._iframe?.remove();\n    this._iframe = void 0;\n  }\n  async _messageHandler(event) {\n    void this._onMessage?.(event);\n  }\n};\n\n// packages/sdk/client/src/services/shell-manager.ts\nimport { Event as Event4 } from \"@dxos/async\";\nimport { DEFAULT_SHELL_CHANNEL, appServiceBundle, shellServiceBundle } from \"@dxos/client-protocol\";\nimport { invariant } from \"@dxos/invariant\";\nimport { log as log4 } from \"@dxos/log\";\nimport { ShellDisplay } from \"@dxos/protocols/proto/dxos/iframe\";\nimport { createProtoRpcPeer } from \"@dxos/rpc\";\nimport { createIFramePort } from \"@dxos/rpc-tunnel\";\nvar __dxlog_file4 = \"/home/runner/work/dxos/dxos/packages/sdk/client/src/services/shell-manager.ts\";\nvar shellStyles = Object.entries({\n  display: \"none\",\n  position: \"fixed\",\n  top: 0,\n  left: 0,\n  width: \"100vw\",\n  height: \"100vh\",\n  border: 0,\n  \"z-index\": 60\n}).reduce((acc, [key, value]) => `${acc}${key}: ${value};`, \"\");\nvar ShellManager = class {\n  // prettier-ignore\n  constructor(_iframeManager, _channel = DEFAULT_SHELL_CHANNEL) {\n    this._iframeManager = _iframeManager;\n    this._channel = _channel;\n    this.contextUpdate = new Event4();\n    this._display = ShellDisplay.NONE;\n  }\n  get display() {\n    return this._display;\n  }\n  async setLayout(request) {\n    invariant(this._shellRpc, \"ShellManager not open\", {\n      F: __dxlog_file4,\n      L: 57,\n      S: this,\n      A: [\n        \"this._shellRpc\",\n        \"'ShellManager not open'\"\n      ]\n    });\n    log4(\"set layout\", request, {\n      F: __dxlog_file4,\n      L: 58,\n      S: this,\n      C: (f, a) => f(...a)\n    });\n    this._display = ShellDisplay.FULLSCREEN;\n    this.contextUpdate.emit({\n      display: this._display\n    });\n    await this._shellRpc.rpc.ShellService.setLayout(request, {\n      timeout: RPC_TIMEOUT\n    });\n  }\n  async setInvitationUrl(request) {\n    log4(\"set invitation url\", request, {\n      F: __dxlog_file4,\n      L: 65,\n      S: this,\n      C: (f, a) => f(...a)\n    });\n    await this._shellRpc?.rpc.ShellService.setInvitationUrl(request, {\n      timeout: RPC_TIMEOUT\n    });\n  }\n  async open() {\n    if (this._shellRpc) {\n      return;\n    }\n    await this._iframeManager.open();\n    const iframe = this._iframeManager.iframe;\n    iframe.setAttribute(\"style\", shellStyles);\n    iframe.setAttribute(\"name\", \"dxos-shell\");\n    iframe.setAttribute(\"data-testid\", \"dxos-shell\");\n    this.contextUpdate.on(({ display, reload }) => {\n      if (reload) {\n        window.location.reload();\n      }\n      iframe.style.display = display === ShellDisplay.NONE ? \"none\" : \"\";\n      if (display === ShellDisplay.NONE) {\n        iframe.blur();\n      }\n    });\n    const origin = this._iframeManager.source.origin === \"null\" ? this._iframeManager.source.toString().split(\"/\").slice(0, 3).join(\"/\") : this._iframeManager.source.origin;\n    const port = createIFramePort({\n      origin,\n      channel: this._channel,\n      iframe: this._iframeManager.iframe\n    });\n    this._shellRpc = createProtoRpcPeer({\n      requested: shellServiceBundle,\n      exposed: appServiceBundle,\n      handlers: {\n        AppService: {\n          setContext: async (request) => {\n            log4(\"set context\", request, {\n              F: __dxlog_file4,\n              L: 110,\n              S: this,\n              C: (f, a) => f(...a)\n            });\n            if (request.display) {\n              this._display = request.display;\n            }\n            this.contextUpdate.emit(request);\n          }\n        }\n      },\n      port\n    });\n    await this._shellRpc.open();\n  }\n  async close() {\n    if (!this._shellRpc) {\n      return;\n    }\n    await this._shellRpc?.close();\n    this._shellRpc = void 0;\n  }\n};\n\n// packages/sdk/client/src/services/iframe-service-host.ts\nfunction _ts_decorate3(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n    r = Reflect.decorate(decorators, target, key, desc);\n  else\n    for (var i = decorators.length - 1; i >= 0; i--)\n      if (d = decorators[i])\n        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nvar IFrameClientServicesHost = class {\n  constructor({ host, source = DEFAULT_VAULT_URL, vault = DEFAULT_INTERNAL_CHANNEL, timeout = PROXY_CONNECTION_TIMEOUT }) {\n    this.closed = new Event5();\n    this._host = host;\n    this._source = source;\n    this._vault = vault;\n    this._timeout = timeout;\n    const loaded = new Trigger();\n    this._iframeManager = new IFrameManager({\n      // NOTE: Using query params invalidates the service worker cache & requires a custom worker.\n      //   https://developer.chrome.com/docs/workbox/modules/workbox-build/#generatesw\n      source: new URL(this._source, window.location.origin),\n      onOpen: async () => {\n        await asyncTimeout(loaded.wait(), this._timeout, new RemoteServiceConnectionTimeout(\"Vault failed to load\"));\n        this._iframeManager?.iframe?.contentWindow?.postMessage({\n          channel: this._vault,\n          payload: \"init\"\n        }, this._iframeManager.source.origin);\n      },\n      onMessage: (event) => {\n        const { channel, payload } = event.data;\n        if (channel !== this._vault) {\n          return;\n        }\n        if (payload === \"loaded\") {\n          loaded.wake();\n        } else if (payload === \"client\") {\n          const messageChannel = new MessageChannel();\n          const server = createBundledRpcServer({\n            services: this._host.descriptors,\n            handlers: this._host.services,\n            port: createWorkerPort({\n              port: messageChannel.port1\n            })\n          });\n          this._iframeManager?.iframe?.contentWindow?.postMessage({\n            channel: this._vault,\n            payload: {\n              command: \"port\",\n              port: messageChannel.port2\n            }\n          }, this._iframeManager.source.origin, [\n            messageChannel.port2\n          ]);\n          void server.open();\n        }\n      }\n    });\n    this._shellManager = new ShellManager(this._iframeManager);\n  }\n  get descriptors() {\n    return this._host.descriptors;\n  }\n  get services() {\n    return this._host.services;\n  }\n  async open() {\n    await this._host.open();\n    await this._shellManager.open();\n  }\n  async close() {\n    await this._shellManager.close();\n    await this._iframeManager.close();\n    await this._host.close();\n  }\n};\nIFrameClientServicesHost = _ts_decorate3([\n  trace3.resource()\n], IFrameClientServicesHost);\n\n// packages/sdk/client/src/services/iframe-service-proxy.ts\nimport { asyncTimeout as asyncTimeout3, Event as Event7, Trigger as Trigger2 } from \"@dxos/async\";\nimport { DEFAULT_VAULT_URL as DEFAULT_VAULT_URL2, DEFAULT_INTERNAL_CHANNEL as DEFAULT_INTERNAL_CHANNEL2, DEFAULT_SHELL_CHANNEL as DEFAULT_SHELL_CHANNEL2, PROXY_CONNECTION_TIMEOUT as PROXY_CONNECTION_TIMEOUT2 } from \"@dxos/client-protocol\";\nimport { PublicKey as PublicKey2 } from \"@dxos/keys\";\nimport { log as log5, parseFilter } from \"@dxos/log\";\nimport { RemoteServiceConnectionTimeout as RemoteServiceConnectionTimeout3, trace as Trace } from \"@dxos/protocols\";\nimport { LogLevel } from \"@dxos/protocols/proto/dxos/client/services\";\nimport { createWorkerPort as createWorkerPort2 } from \"@dxos/rpc-tunnel\";\nimport { trace as trace5 } from \"@dxos/tracing\";\n\n// packages/sdk/client/src/services/service-proxy.ts\nimport { asyncTimeout as asyncTimeout2, Event as Event6 } from \"@dxos/async\";\nimport { clientServiceBundle as clientServiceBundle4 } from \"@dxos/client-protocol\";\nimport { ClientServicesProviderResource as ClientServicesProviderResource3 } from \"@dxos/client-services\";\nimport { invariant as invariant2 } from \"@dxos/invariant\";\nimport { RemoteServiceConnectionTimeout as RemoteServiceConnectionTimeout2 } from \"@dxos/protocols\";\nimport { createProtoRpcPeer as createProtoRpcPeer2 } from \"@dxos/rpc\";\nimport { trace as trace4 } from \"@dxos/tracing\";\nfunction _ts_decorate4(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n    r = Reflect.decorate(decorators, target, key, desc);\n  else\n    for (var i = decorators.length - 1; i >= 0; i--)\n      if (d = decorators[i])\n        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nvar __dxlog_file5 = \"/home/runner/work/dxos/dxos/packages/sdk/client/src/services/service-proxy.ts\";\nvar ClientServicesProxy = class {\n  constructor(_port, _timeout = 3e4) {\n    this._port = _port;\n    this._timeout = _timeout;\n    this.closed = new Event6();\n  }\n  get proxy() {\n    invariant2(this._proxy, \"Client services not open\", {\n      F: __dxlog_file5,\n      L: 30,\n      S: this,\n      A: [\n        \"this._proxy\",\n        \"'Client services not open'\"\n      ]\n    });\n    return this._proxy;\n  }\n  get descriptors() {\n    return clientServiceBundle4;\n  }\n  get services() {\n    invariant2(this._proxy, \"Client services not open\", {\n      F: __dxlog_file5,\n      L: 39,\n      S: this,\n      A: [\n        \"this._proxy\",\n        \"'Client services not open'\"\n      ]\n    });\n    return this._proxy.rpc;\n  }\n  async open() {\n    if (this._proxy) {\n      return;\n    }\n    this._proxy = createProtoRpcPeer2({\n      requested: clientServiceBundle4,\n      exposed: {},\n      handlers: {},\n      port: this._port\n    });\n    await asyncTimeout2(this._proxy.open(), this._timeout, new RemoteServiceConnectionTimeout2(\"Failed to establish dxrpc connection\", {\n      timeout: this._timeout\n    }));\n  }\n  async close() {\n    if (!this._proxy) {\n      return;\n    }\n    await this._proxy.close();\n    this._proxy = void 0;\n  }\n};\nClientServicesProxy = _ts_decorate4([\n  trace4.resource({\n    annotation: ClientServicesProviderResource3\n  })\n], ClientServicesProxy);\n\n// packages/sdk/client/src/services/iframe-service-proxy.ts\nfunction _ts_decorate5(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n    r = Reflect.decorate(decorators, target, key, desc);\n  else\n    for (var i = decorators.length - 1; i >= 0; i--)\n      if (d = decorators[i])\n        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nvar __dxlog_file6 = \"/home/runner/work/dxos/dxos/packages/sdk/client/src/services/iframe-service-proxy.ts\";\nvar IFrameClientServicesProxy = class {\n  constructor({ source = DEFAULT_VAULT_URL2, shell = DEFAULT_SHELL_CHANNEL2, vault = DEFAULT_INTERNAL_CHANNEL2, timeout = PROXY_CONNECTION_TIMEOUT2, logFilter = \"error,warn\" } = {}) {\n    this.closed = new Event7();\n    /**\n    * Unique id.\n    */\n    this._instanceId = PublicKey2.random().toHex();\n    this._source = source;\n    this._shell = shell;\n    this._vault = vault;\n    this._logFilter = parseFilter(logFilter);\n    this._timeout = timeout;\n    const loaded = new Trigger2();\n    const ready = new Trigger2();\n    this._iframeManager = new IFrameManager({\n      // NOTE: Using query params invalidates the service worker cache & requires a custom worker.\n      //   https://developer.chrome.com/docs/workbox/modules/workbox-build/#generatesw\n      source: new URL(typeof this._shell === \"string\" ? this._source : `${this._source}#disableshell`, window.location.origin),\n      onOpen: async () => {\n        await asyncTimeout3(loaded.wait(), this._timeout, new RemoteServiceConnectionTimeout3(\"Vault failed to load\"));\n        this._iframeManager.iframe?.contentWindow?.postMessage({\n          channel: this._vault,\n          payload: \"init\"\n        }, this._iframeManager.source.origin);\n        const port = await asyncTimeout3(ready.wait(), this._timeout, new RemoteServiceConnectionTimeout3(\"Vault failed to provide MessagePort\"));\n        this._appPort = createWorkerPort2({\n          port\n        });\n      },\n      onMessage: async (event) => {\n        const { channel, payload } = event.data;\n        if (channel !== this._vault) {\n          return;\n        }\n        if (payload === \"loaded\") {\n          loaded.wake();\n        } else if (payload?.command === \"init\") {\n          ready.wake(payload.port);\n        }\n      }\n    });\n    if (typeof this._shell === \"string\") {\n      this._shellManager = new ShellManager(this._iframeManager);\n    }\n  }\n  get proxy() {\n    return this._clientServicesProxy.proxy;\n  }\n  get descriptors() {\n    return this._clientServicesProxy.descriptors;\n  }\n  get services() {\n    return this._clientServicesProxy.services;\n  }\n  async open() {\n    if (this._clientServicesProxy) {\n      return;\n    }\n    log5.trace(\"dxos.sdk.iframe-clientTraceices-proxy\", Trace.begin({\n      id: this._instanceId\n    }), {\n      F: __dxlog_file6,\n      L: 142,\n      S: this,\n      C: (f, a) => f(...a)\n    });\n    await this._iframeManager.open();\n    this._clientServicesProxy = new ClientServicesProxy(this._appPort);\n    await this._clientServicesProxy.open();\n    this._loggingStream = this._clientServicesProxy.services.LoggingService.queryLogs({\n      filters: this._logFilter\n    }, {\n      timeout: RPC_TIMEOUT\n    });\n    this._loggingStream.subscribe((entry) => {\n      switch (entry.level) {\n        case LogLevel.DEBUG:\n          log5.debug(`[vault] ${entry.message}`, entry.context, {\n            F: __dxlog_file6,\n            L: 157,\n            S: this,\n            C: (f, a) => f(...a)\n          });\n          break;\n        case LogLevel.INFO:\n          log5.info(`[vault] ${entry.message}`, entry.context, {\n            F: __dxlog_file6,\n            L: 160,\n            S: this,\n            C: (f, a) => f(...a)\n          });\n          break;\n        case LogLevel.WARN:\n          log5.warn(`[vault] ${entry.message}`, entry.context, {\n            F: __dxlog_file6,\n            L: 163,\n            S: this,\n            C: (f, a) => f(...a)\n          });\n          break;\n        case LogLevel.ERROR:\n          log5.error(`[vault] ${entry.message}`, entry.context, {\n            F: __dxlog_file6,\n            L: 166,\n            S: this,\n            C: (f, a) => f(...a)\n          });\n          break;\n      }\n    });\n    await this._shellManager?.open();\n  }\n  async close() {\n    await this._shellManager?.close();\n    await this._iframeManager.close();\n    await this._loggingStream?.close();\n    await this._clientServicesProxy?.close();\n    this._clientServicesProxy = void 0;\n    log5.trace(\"dxos.sdk.iframe-clientTraceices-proxy\", Trace.end({\n      id: this._instanceId\n    }), {\n      F: __dxlog_file6,\n      L: 180,\n      S: this,\n      C: (f, a) => f(...a)\n    });\n  }\n};\nIFrameClientServicesProxy = _ts_decorate5([\n  trace5.resource()\n], IFrameClientServicesProxy);\n\n// packages/sdk/client/src/services/utils.ts\nvar __dxlog_file7 = \"/home/runner/work/dxos/dxos/packages/sdk/client/src/services/utils.ts\";\nvar fromIFrame = async (config = new Config2(), options = {}) => {\n  log6(\"creating client services\", {\n    config\n  }, {\n    F: __dxlog_file7,\n    L: 25,\n    S: void 0,\n    C: (f, a) => f(...a)\n  });\n  if (typeof window === \"undefined\") {\n    throw new ApiError2(\"Cannot configure IFrame bridge outside of browser environment.\");\n  }\n  const source = config.get(\"runtime.client.remoteSource\");\n  if (options.vault || safariCheck()) {\n    return new IFrameClientServicesHost({\n      host: await getAsyncValue(fromHost(config)),\n      source,\n      vault: options.vault,\n      timeout: options.timeout\n    });\n  }\n  return new IFrameClientServicesProxy({\n    source,\n    ...options\n  });\n};\n\n// packages/sdk/client/src/services/worker-client-services.ts\nimport { Event as Event8, Trigger as Trigger3, synchronized as synchronized2 } from \"@dxos/async\";\nimport { clientServiceBundle as clientServiceBundle5 } from \"@dxos/client-protocol\";\nimport { Config as Config3 } from \"@dxos/config\";\nimport { parseFilter as parseFilter2, log as log7 } from \"@dxos/log\";\nimport { LogLevel as LogLevel2 } from \"@dxos/protocols/proto/dxos/client/services\";\nimport { createWorkerPort as createWorkerPort3 } from \"@dxos/rpc-tunnel\";\nimport { trace as trace6 } from \"@dxos/tracing\";\nfunction _ts_decorate6(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n    r = Reflect.decorate(decorators, target, key, desc);\n  else\n    for (var i = decorators.length - 1; i >= 0; i--)\n      if (d = decorators[i])\n        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nvar __dxlog_file8 = \"/home/runner/work/dxos/dxos/packages/sdk/client/src/services/worker-client-services.ts\";\nvar fromWorker = async (config = new Config3(), options) => new WorkerClientServices({\n  config,\n  ...options\n});\nvar WorkerClientServices = class {\n  constructor({ config, createWorker, logFilter = \"error,warn\", observabilityGroup, signalTelemetryEnabled }) {\n    this.closed = new Event8();\n    this.joinedSpace = new Event8();\n    this._isOpen = false;\n    this._config = config;\n    this._createWorker = createWorker;\n    this._logFilter = parseFilter2(logFilter);\n    this._observabilityGroup = observabilityGroup;\n    this._signalTelemetryEnabled = signalTelemetryEnabled ?? false;\n  }\n  get descriptors() {\n    return clientServiceBundle5;\n  }\n  get services() {\n    return this._services.services;\n  }\n  get runtime() {\n    return this._runtime;\n  }\n  async open() {\n    if (this._isOpen) {\n      return;\n    }\n    log7(\"opening...\", void 0, {\n      F: __dxlog_file8,\n      L: 88,\n      S: this,\n      C: (f, a) => f(...a)\n    });\n    const { SharedWorkerConnection } = await import(\"@dxos/client-services\");\n    const ports = new Trigger3();\n    const worker = this._createWorker();\n    worker.port.postMessage({\n      dxlog: localStorage.getItem(\"dxlog\")\n    });\n    worker.port.onmessage = (event) => {\n      const { command, payload } = event.data;\n      if (command === \"init\") {\n        ports.wake(payload);\n      }\n    };\n    const { systemPort, appPort } = await ports.wait();\n    this._runtime = new SharedWorkerConnection({\n      config: this._config,\n      systemPort: createWorkerPort3({\n        port: systemPort\n      })\n    });\n    await this._runtime.open({\n      origin: location.origin,\n      observabilityGroup: this._observabilityGroup,\n      signalTelemetryEnabled: this._signalTelemetryEnabled\n    });\n    this._services = new ClientServicesProxy(createWorkerPort3({\n      port: appPort\n    }));\n    await this._services.open();\n    void navigator.locks.request(LOCK_KEY, () => {\n      log7(\"terminated\", void 0, {\n        F: __dxlog_file8,\n        L: 115,\n        S: this,\n        C: (f, a) => f(...a)\n      });\n      if (this._isOpen) {\n        this.closed.emit(new Error(\"Shared worker terminated.\"));\n      }\n    });\n    this._loggingStream = this._services.services.LoggingService.queryLogs({\n      filters: this._logFilter\n    }, {\n      timeout: RPC_TIMEOUT\n    });\n    this._loggingStream.subscribe((entry) => {\n      switch (entry.level) {\n        case LogLevel2.DEBUG:\n          log7.debug(entry.message, entry.context, mapLogMeta(entry.meta));\n          break;\n        case LogLevel2.INFO:\n          log7.info(entry.message, entry.context, mapLogMeta(entry.meta));\n          break;\n        case LogLevel2.WARN:\n          log7.warn(entry.message, entry.context, mapLogMeta(entry.meta));\n          break;\n        case LogLevel2.ERROR:\n          log7.error(entry.message, entry.context, mapLogMeta(entry.meta));\n          break;\n      }\n    });\n    log7(\"opened\", void 0, {\n      F: __dxlog_file8,\n      L: 144,\n      S: this,\n      C: (f, a) => f(...a)\n    });\n    this._isOpen = true;\n  }\n  async close() {\n    if (!this._isOpen) {\n      return;\n    }\n    log7(\"closing...\", void 0, {\n      F: __dxlog_file8,\n      L: 154,\n      S: this,\n      C: (f, a) => f(...a)\n    });\n    await this._loggingStream?.close();\n    await this._runtime.close();\n    await this._services.close();\n    log7(\"closed\", void 0, {\n      F: __dxlog_file8,\n      L: 159,\n      S: this,\n      C: (f, a) => f(...a)\n    });\n    this._isOpen = false;\n  }\n};\n_ts_decorate6([\n  trace6.info()\n], WorkerClientServices.prototype, \"_isOpen\", void 0);\n_ts_decorate6([\n  synchronized2\n], WorkerClientServices.prototype, \"open\", null);\n_ts_decorate6([\n  synchronized2\n], WorkerClientServices.prototype, \"close\", null);\nWorkerClientServices = _ts_decorate6([\n  trace6.resource()\n], WorkerClientServices);\nvar mapLogMeta = (meta) => {\n  return meta && {\n    F: meta.file,\n    L: meta.line,\n    S: {\n      ...meta.scope,\n      remoteSessionId: meta.scope?.hostSessionId,\n      hostSessionId: void 0\n    }\n  };\n};\n\n// packages/sdk/client/src/services/client-services-factory.tsx\nvar __dxlog_file9 = \"/home/runner/work/dxos/dxos/packages/sdk/client/src/services/client-services-factory.tsx\";\nvar createClientServices = (config, createWorker, observabilityGroup, signalTelemetryEnabled) => {\n  const remote = config.values.runtime?.client?.remoteSource;\n  if (remote) {\n    const url = new URL(remote);\n    const protocol = url.protocol.slice(0, -1);\n    switch (protocol) {\n      case \"ws\":\n      case \"wss\": {\n        return fromSocket(remote, config.values.runtime?.client?.remoteSourceAuthenticationToken);\n      }\n      case \"http\":\n      case \"https\": {\n        log8.warn(\"IFrame services deprecated.\", void 0, {\n          F: __dxlog_file9,\n          L: 40,\n          S: void 0,\n          C: (f, a) => f(...a)\n        });\n        return fromIFrame(config);\n      }\n    }\n  }\n  return createWorker && typeof SharedWorker !== \"undefined\" ? fromWorker(config, {\n    createWorker,\n    observabilityGroup,\n    signalTelemetryEnabled\n  }) : fromHost(config, {}, observabilityGroup, signalTelemetryEnabled);\n};\n\n// packages/sdk/client/src/services/shell.ts\nimport { ShellDisplay as ShellDisplay2, ShellLayout } from \"@dxos/protocols/proto/dxos/iframe\";\nimport { ComplexSet } from \"@dxos/util\";\nvar Shell = class {\n  constructor({ shellManager, identity, devices, spaces }) {\n    this._shellManager = shellManager;\n    this._identity = identity;\n    this._devices = devices;\n    this._spaces = spaces;\n  }\n  async setInvitationUrl(request) {\n    await this._shellManager.setInvitationUrl(request);\n  }\n  /**\n  * Open the shell with the given layout.\n  */\n  async open(layout = ShellLayout.IDENTITY, options = {}) {\n    await this._shellManager.setLayout({\n      layout,\n      ...options\n    });\n  }\n  /**\n  * Create a new identity.\n  * Opens the shell and starts the identity creation flow based on the given options.\n  *\n  * @param options.invitationCode If provided, join an existing identity via device invitation.\n  *\n  * @returns Shell result with the new identity.\n  */\n  async initializeIdentity({ invitationCode } = {}) {\n    await this._shellManager.setLayout({\n      layout: ShellLayout.INITIALIZE_IDENTITY,\n      invitationCode\n    });\n    return new Promise((resolve) => {\n      this._shellManager.contextUpdate.on((context) => {\n        if (context.display === ShellDisplay2.NONE) {\n          resolve({\n            cancelled: true\n          });\n        }\n      });\n      this._identity.subscribe((identity) => {\n        if (identity) {\n          resolve({\n            identity,\n            cancelled: false\n          });\n        }\n      });\n    });\n  }\n  /**\n  * Invite a new device to join the current identity.\n  * Opens the shell and presents a device invitation.\n  *\n  * @returns Shell result with the new device.\n  */\n  async shareIdentity() {\n    if (!this._identity.get()) {\n      return {\n        error: new Error(\"Identity does not exist\"),\n        cancelled: false\n      };\n    }\n    const initialDevices = new ComplexSet((key) => key.toHex(), this._devices.get().map((device) => device.deviceKey));\n    await this._shellManager.setLayout({\n      layout: ShellLayout.SHARE_IDENTITY\n    });\n    return new Promise((resolve) => {\n      this._shellManager.contextUpdate.on((context) => {\n        if (context.display === ShellDisplay2.NONE) {\n          const device = this._devices.get().find((device2) => !initialDevices.has(device2.deviceKey));\n          resolve({\n            device,\n            cancelled: !device\n          });\n        }\n      });\n    });\n  }\n  /**\n  * Invite new members to join the current space.\n  * Opens the shell to the specified space, showing current members and allowing new members to be invited.\n  *\n  * @param options.spaceKey The space to share.\n  * @param options.target The target location to share with new members.\n  *\n  * @returns Shell result with any new members that join while the shell is open.\n  */\n  async shareSpace({ spaceKey, target }) {\n    if (!this._identity.get()) {\n      return {\n        error: new Error(\"Identity does not exist\"),\n        cancelled: false\n      };\n    }\n    const space = this._spaces.get().find((space2) => space2.key.equals(spaceKey));\n    if (!space) {\n      return {\n        error: new Error(\"Space does not exist\"),\n        cancelled: false\n      };\n    }\n    const initialMembers = new ComplexSet((key) => key.toHex(), space.members.get().map((member) => member.identity.identityKey));\n    await this._shellManager.setLayout({\n      layout: ShellLayout.SPACE,\n      spaceKey,\n      target\n    });\n    return new Promise((resolve) => {\n      this._shellManager.contextUpdate.on((context) => {\n        if (context.display === ShellDisplay2.NONE) {\n          const members = space.members.get().filter((member) => !initialMembers.has(member.identity.identityKey));\n          resolve({\n            members,\n            cancelled: members.length === 0\n          });\n        }\n      });\n    });\n  }\n  /**\n  * Join an existing space.\n  * Opens the shell and starts the space join flow based on the given options.\n  *\n  * @param options.invitationCode If provided, redeem the invitation code to join the space.\n  *\n  * @returns The joined space.\n  * @throws {Error} If no identity exists.\n  */\n  async joinSpace({ invitationCode } = {}) {\n    if (!this._identity.get()) {\n      return {\n        error: new Error(\"Identity does not exist\"),\n        cancelled: false\n      };\n    }\n    await this._shellManager.setLayout({\n      layout: ShellLayout.JOIN_SPACE,\n      invitationCode\n    });\n    return new Promise((resolve) => {\n      this._shellManager.contextUpdate.on((context) => {\n        const space = context.spaceKey && this._spaces.get().find((space2) => context.spaceKey?.equals(space2.key));\n        if (space) {\n          resolve({\n            space,\n            target: context.target,\n            cancelled: false\n          });\n        }\n        if (context.display === ShellDisplay2.NONE) {\n          resolve({\n            cancelled: true\n          });\n        }\n      });\n    });\n  }\n};\n\n// packages/sdk/client/src/services/agent-hosting-provider.ts\nimport { jwtDecode } from \"jwt-decode\";\nimport { synchronized as synchronized3 } from \"@dxos/async\";\nimport { invariant as invariant3 } from \"@dxos/invariant\";\nimport { PublicKey as PublicKey3 } from \"@dxos/keys\";\nimport { log as log9 } from \"@dxos/log\";\nimport { schema } from \"@dxos/protocols\";\nimport { InitAuthSequenceResponse } from \"@dxos/protocols/proto/dxos/service/agentmanager\";\nimport { WebsocketRpcClient } from \"@dxos/websocket-rpc\";\nfunction _ts_decorate7(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n    r = Reflect.decorate(decorators, target, key, desc);\n  else\n    for (var i = decorators.length - 1; i >= 0; i--)\n      if (d = decorators[i])\n        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nvar __dxlog_file10 = \"/home/runner/work/dxos/dxos/packages/sdk/client/src/services/agent-hosting-provider.ts\";\nvar ProviderApiError = class extends Error {\n};\nvar defaultConfig = {\n  name: \"default\",\n  baseUrl: \"http://localhost:8082/v1alpha1/\",\n  username: \"dxos\"\n};\nvar COMPOSER_BETA_COOKIE_NAME = \"COMPOSER-BETA\";\nvar AgentManagerClient = class {\n  // TODO(nf): just accept Client instead?\n  constructor(_clientConfig, _halo) {\n    this._clientConfig = _clientConfig;\n    this._halo = _halo;\n    this.DXRPC_PATH = \"dxrpc\";\n    this._rpcState = \"disconnected\";\n    this._authToken = null;\n    const runtimeAgentHostingConfig = this._clientConfig.get(\"runtime.services.agentHosting\");\n    invariant3(runtimeAgentHostingConfig, \"agentHosting config not found\", {\n      F: __dxlog_file10,\n      L: 73,\n      S: this,\n      A: [\n        \"runtimeAgentHostingConfig\",\n        \"'agentHosting config not found'\"\n      ]\n    });\n    invariant3(runtimeAgentHostingConfig.server, \"agentHosting server not found\", {\n      F: __dxlog_file10,\n      L: 74,\n      S: this,\n      A: [\n        \"runtimeAgentHostingConfig.server\",\n        \"'agentHosting server not found'\"\n      ]\n    });\n    this._config = {\n      ...defaultConfig,\n      baseUrl: runtimeAgentHostingConfig.server,\n      password: this._clientConfig.get(\"runtime.app.env.DX_AGENTHOSTING_PASSWORD\")\n    };\n    if (!this._config.baseUrl.endsWith(\"/\")) {\n      this._config.baseUrl += \"/\";\n    }\n    this._wsDxrpcUrl = new URL(this.DXRPC_PATH, this._config.baseUrl.replace(\"http\", \"ws\")).href;\n  }\n  init(authToken) {\n    if (!this._checkAuthorization(authToken)) {\n      return false;\n    }\n    return true;\n  }\n  /**\n  * Check auth token from CF worker whether identity is allowed to create agent.\n  *\n  * Note: This will prevent the client from making unnecessary requests to the AgentHostingProvider API.\n  * The AgentHostingProvider will also validate the auth token on its own.\n  */\n  _checkAuthorization(authToken) {\n    const cookies = Object.fromEntries(document.cookie.split(\"; \").map((v) => v.split(/=(.*)/s).map(decodeURIComponent)));\n    if (cookies[COMPOSER_BETA_COOKIE_NAME] == null) {\n      return false;\n    }\n    const composerBetaJwt = this._decodeComposerBetaJwt();\n    if (composerBetaJwt && composerBetaJwt.auth_agent) {\n      return true;\n    }\n    return false;\n  }\n  // TODO(nf): use asymmetric key to verify token?\n  _decodeComposerBetaJwt() {\n    const decoded = jwtDecode(this._getComposerBetaCookie());\n    return decoded;\n  }\n  _getComposerBetaCookie() {\n    const cookies = Object.fromEntries(document.cookie.split(\"; \").map((v) => v.split(/=(.*)/s).map(decodeURIComponent)));\n    if (cookies[COMPOSER_BETA_COOKIE_NAME] == null) {\n      return null;\n    }\n    return cookies[COMPOSER_BETA_COOKIE_NAME];\n  }\n  requestInitWithCredentials(req) {\n    return {\n      ...req,\n      headers: {\n        ...req.headers,\n        Authorization: \"Basic \" + Buffer.from(`${this._config.username}:${this._config.password}`).toString(\"base64\")\n      }\n    };\n  }\n  requestInitWithAuthToken(req) {\n    return {\n      ...req,\n      headers: {\n        ...req.headers,\n        Authorization: \"Bearer \" + this._authToken\n      }\n    };\n  }\n  async checkEligibility(authToken) {\n    return true;\n  }\n  async _ensureAuthenticated() {\n    if (this._validAuthToken()) {\n      return;\n    }\n    const { deviceKey } = this._halo.device;\n    invariant3(deviceKey, \"deviceKey not found\", {\n      F: __dxlog_file10,\n      L: 173,\n      S: this,\n      A: [\n        \"deviceKey\",\n        \"'deviceKey not found'\"\n      ]\n    });\n    const authDeviceCreds = await this._queryCredentials(\"dxos.halo.credentials.AuthorizedDevice\", (cred) => PublicKey3.equals(cred.subject.id, deviceKey));\n    invariant3(authDeviceCreds.length === 1, \"Improper number of authorized devices\", {\n      F: __dxlog_file10,\n      L: 178,\n      S: this,\n      A: [\n        \"authDeviceCreds.length === 1\",\n        \"'Improper number of authorized devices'\"\n      ]\n    });\n    await this._agentManagerAuth(authDeviceCreds[0]);\n  }\n  async _openRpc() {\n    if (this._rpcState === \"connected\") {\n      return;\n    }\n    this._rpc = new WebsocketRpcClient({\n      url: this._wsDxrpcUrl,\n      requested: {\n        AgentManager: schema.getService(\"dxos.service.agentmanager.AgentManager\")\n      },\n      noHandshake: true\n    });\n    this._rpc.connected.on(() => {\n      this._rpcState = \"connected\";\n    });\n    this._rpc.disconnected.on(() => {\n      this._rpcState = \"disconnected\";\n    });\n    this._rpc.error.on((err) => {\n      log9.info(\"rpc error\", {\n        err\n      }, {\n        F: __dxlog_file10,\n        L: 201,\n        S: this,\n        C: (f, a) => f(...a)\n      });\n      this._rpcState = \"disconnected\";\n    });\n    try {\n      await this._rpc.open();\n    } catch (err) {\n      log9.warn(\"failed to open rpc\", {\n        err\n      }, {\n        F: __dxlog_file10,\n        L: 207,\n        S: this,\n        C: (f, a) => f(...a)\n      });\n      throw new Error(\"Failed to open rpc\");\n    }\n  }\n  // Authenticate to the agentmanager service using dxrpc and obtain a JWT token for subsequent HTTP requests.\n  async _agentManagerAuth(authDeviceCreds) {\n    await this._openRpc();\n    invariant3(this._rpc, \"RPC not initialized\", {\n      F: __dxlog_file10,\n      L: 215,\n      S: this,\n      A: [\n        \"this._rpc\",\n        \"'RPC not initialized'\"\n      ]\n    });\n    const { result, nonce, agentmanagerKey, initAuthResponseReason } = await this._rpc.rpc.AgentManager.initAuthSequence({\n      authToken: this._getComposerBetaCookie()\n    });\n    if (result !== InitAuthSequenceResponse.InitAuthSequenceResult.SUCCESS || !nonce || !agentmanagerKey) {\n      log9(\"auth init failed\", {\n        result,\n        nonce,\n        agentmanagerKey,\n        initAuthResponseReason\n      }, {\n        F: __dxlog_file10,\n        L: 220,\n        S: this,\n        C: (f, a) => f(...a)\n      });\n      throw new Error(\"Failed to initialize auth sequence\");\n    }\n    const agentmanagerAccessCreds = await this._queryCredentials(\"dxos.halo.credentials.ServiceAccess\", (cred) => PublicKey3.equals(cred.issuer, agentmanagerKey));\n    if (!agentmanagerAccessCreds.length) {\n      log9.info(\"no access credentials - requesting...\", void 0, {\n        F: __dxlog_file10,\n        L: 227,\n        S: this,\n        C: (f, a) => f(...a)\n      });\n    } else {\n      log9.info(\"access credentials found - requesting session token..\", void 0, {\n        F: __dxlog_file10,\n        L: 229,\n        S: this,\n        C: (f, a) => f(...a)\n      });\n    }\n    const credsToPresent = [\n      authDeviceCreds.id,\n      agentmanagerAccessCreds[0]?.id\n    ].filter(Boolean);\n    const presentation = await this._halo.presentCredentials({\n      ids: credsToPresent,\n      nonce\n    });\n    const { token, credential } = await this._rpc.rpc.AgentManager.authenticate({\n      presentation\n    });\n    if (token) {\n      this._authToken = token;\n      if (!this._validAuthToken()) {\n        log9(\"received invalid authToken\", {\n          token\n        }, {\n          F: __dxlog_file10,\n          L: 242,\n          S: this,\n          C: (f, a) => f(...a)\n        });\n        throw new ProviderApiError(\"Received invalid authToken\");\n      }\n    } else {\n      invariant3(credential, \"No credential or token received\", {\n        F: __dxlog_file10,\n        L: 246,\n        S: this,\n        A: [\n          \"credential\",\n          \"'No credential or token received'\"\n        ]\n      });\n      log9(\"received credential, writing to HALO\", {\n        credential\n      }, {\n        F: __dxlog_file10,\n        L: 247,\n        S: this,\n        C: (f, a) => f(...a)\n      });\n      await this._halo.writeCredentials([\n        credential\n      ]);\n      await this._agentManagerAuth(authDeviceCreds);\n    }\n  }\n  _validAuthToken() {\n    if (!this._authToken) {\n      return null;\n    }\n    const decoded = jwtDecode(this._authToken);\n    if (!decoded.exp) {\n      log9.warn(\"authToken missing expiry\", {\n        decoded\n      }, {\n        F: __dxlog_file10,\n        L: 260,\n        S: this,\n        C: (f, a) => f(...a)\n      });\n      return null;\n    }\n    if (decoded.exp * 1e3 < Date.now()) {\n      log9(\"authToken expired\", {\n        decoded\n      }, {\n        F: __dxlog_file10,\n        L: 264,\n        S: this,\n        C: (f, a) => f(...a)\n      });\n      return null;\n    }\n    return decoded;\n  }\n  async _queryCredentials(type, predicate) {\n    const haloCredentials = this._halo.credentials.get();\n    return haloCredentials.filter((cred) => {\n      if (type && cred.subject.assertion[\"@type\"] !== type) {\n        return false;\n      }\n      if (predicate && !predicate(cred)) {\n        return false;\n      }\n      return true;\n    });\n  }\n  async createAgent(invitationCode, identityKey) {\n    await this._ensureAuthenticated();\n    const res = await fetch(new URL(\"agent\", this._config.baseUrl), this.requestInitWithAuthToken({\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        invitation: invitationCode,\n        identityKey\n      })\n    }));\n    try {\n      const agent = await res.json();\n      return agent.metadata.uid;\n    } catch (err) {\n      if (err instanceof TypeError) {\n        log9.warn(\"failed to parse response from agent create\", {\n          res\n        }, {\n          F: __dxlog_file10,\n          L: 306,\n          S: this,\n          C: (f, a) => f(...a)\n        });\n        throw new ProviderApiError(\"failed to parse response from hosting provider\");\n      }\n      log9.warn(\"bad response from agent create\", {\n        res\n      }, {\n        F: __dxlog_file10,\n        L: 309,\n        S: this,\n        C: (f, a) => f(...a)\n      });\n      throw new ProviderApiError(\"bad response from hosting provider\");\n    }\n  }\n  async getAgent(agentID) {\n    await this._ensureAuthenticated();\n    const res = await fetch(new URL(\"agent/\" + agentID, this._config.baseUrl), this.requestInitWithAuthToken({\n      method: \"GET\"\n    }));\n    switch (res.status) {\n      case 200:\n        break;\n      case 404:\n        return null;\n      case 401:\n        throw new ProviderApiError(\"unauthorized\");\n      case 403:\n        throw new ProviderApiError(\"forbidden\");\n      case 500:\n        log9.warn(\"request to agent get failed\", {\n          res\n        }, {\n          F: __dxlog_file10,\n          L: 334,\n          S: this,\n          C: (f, a) => f(...a)\n        });\n        throw new ProviderApiError(\"internal server error from hosting provider\");\n      default:\n        log9.warn(\"request to agent get failed\", {\n          res\n        }, {\n          F: __dxlog_file10,\n          L: 337,\n          S: this,\n          C: (f, a) => f(...a)\n        });\n        throw new ProviderApiError(\"unknown API error\");\n    }\n    log9.info(\"getAgent\", {\n      res\n    }, {\n      F: __dxlog_file10,\n      L: 341,\n      S: this,\n      C: (f, a) => f(...a)\n    });\n    try {\n      const agent = await res.json();\n      return agent.metadata.uid;\n    } catch (err) {\n      if (err instanceof TypeError) {\n        log9.warn(\"failed to parse response from agent get\", {\n          err\n        }, {\n          F: __dxlog_file10,\n          L: 348,\n          S: this,\n          C: (f, a) => f(...a)\n        });\n        throw new ProviderApiError(\"failed to parse response from hosting provider\");\n      }\n      log9.warn(\"bad response from agent get\", {\n        res\n      }, {\n        F: __dxlog_file10,\n        L: 351,\n        S: this,\n        C: (f, a) => f(...a)\n      });\n      throw new ProviderApiError(\"bad response from hosting provider\");\n    }\n  }\n  async destroyAgent(agentID) {\n    await this._ensureAuthenticated();\n    const res = await fetch(new URL(\"agent/\" + agentID, this._config.baseUrl), this.requestInitWithAuthToken({\n      method: \"DELETE\"\n    }));\n    switch (res.status) {\n      case 204:\n        return true;\n      case 404:\n        log9.warn(\"requested destroy on non-existent agent\", void 0, {\n          F: __dxlog_file10,\n          L: 370,\n          S: this,\n          C: (f, a) => f(...a)\n        });\n        return false;\n      case 403:\n        throw new ProviderApiError(\"forbidden\");\n      case 500:\n        log9.warn(\"request to agent destroy failed\", {\n          res\n        }, {\n          F: __dxlog_file10,\n          L: 375,\n          S: this,\n          C: (f, a) => f(...a)\n        });\n        throw new ProviderApiError(\"internal server error from hosting provider\");\n      default:\n        log9.warn(\"request to agent destroy failed\", {\n          res\n        }, {\n          F: __dxlog_file10,\n          L: 378,\n          S: this,\n          C: (f, a) => f(...a)\n        });\n        throw new ProviderApiError(\"unknown API error\");\n    }\n  }\n};\n_ts_decorate7([\n  synchronized3\n], AgentManagerClient.prototype, \"_ensureAuthenticated\", null);\n\n// packages/sdk/client/src/services/fake-agent-hosting-provider.ts\nvar FakeAgentHostingProvider = class {\n  constructor(_clientConfig, _halo) {\n    this._clientConfig = _clientConfig;\n    this._halo = _halo;\n    this._agents = /* @__PURE__ */ new Map();\n  }\n  async createAgent(invitationCode, identityKey) {\n    const agentID = crypto.randomUUID();\n    this._agents.set(identityKey, agentID);\n    return agentID;\n  }\n  async getAgent(agentID) {\n    return this._agents.get(agentID) ?? null;\n  }\n  async destroyAgent(agentID) {\n    return this._agents.delete(agentID);\n  }\n  init(authToken) {\n    return true;\n  }\n};\n\nexport {\n  getUnixSocket,\n  fromAgent,\n  AgentClientServiceProvider,\n  fromHost,\n  LocalClientServices,\n  fromSocket,\n  IFrameManager,\n  ShellManager,\n  IFrameClientServicesHost,\n  ClientServicesProxy,\n  IFrameClientServicesProxy,\n  fromIFrame,\n  fromWorker,\n  WorkerClientServices,\n  createClientServices,\n  Shell,\n  AgentManagerClient,\n  FakeAgentHostingProvider,\n  DEFAULT_VAULT_ORIGIN,\n  DEFAULT_VAULT_URL3 as DEFAULT_VAULT_URL,\n  SystemStatus,\n  ShellDisplay3 as ShellDisplay,\n  ShellLayout2 as ShellLayout\n};\n//# sourceMappingURL=chunk-D6UVCTHY.mjs.map\n"],"file":"index3.js"}