{"version":3,"file":"space-list-GVMAD426.js","sources":["../node_modules/@dxos/protocols/dist/esm/src/query.js","../node_modules/@dxos/client/dist/lib/browser/space-list-GVMAD426.mjs"],"sourcesContent":["//\n// Copyright 2023 DXOS.org\n//\n/**\n * Channel name that will be used to query spaces from agent.\n */\nexport const QUERY_CHANNEL = 'dxos.org/agent/plugin/query';\n//# sourceMappingURL=query.js.map","import {\n  SpaceProxy\n} from \"./chunk-LLHUF7S4.mjs\";\nimport {\n  InvitationsProxy\n} from \"./chunk-JITRD7EO.mjs\";\nimport {\n  RPC_TIMEOUT\n} from \"./chunk-UFEX2AOY.mjs\";\n\n// packages/sdk/client/src/echo/space-list.ts\nimport { inspect } from \"@dxos/node-std/util\";\nimport { Event as Event2, MulticastObservable, PushStream, scheduleTask, Trigger } from \"@dxos/async\";\nimport { CREATE_SPACE_TIMEOUT, defaultKey, Properties } from \"@dxos/client-protocol\";\nimport { Context } from \"@dxos/context\";\nimport { failUndefined, inspectObject, todo as todo2 } from \"@dxos/debug\";\nimport { create } from \"@dxos/echo-schema\";\nimport { invariant as invariant2 } from \"@dxos/invariant\";\nimport { PublicKey as PublicKey2 } from \"@dxos/keys\";\nimport { log as log2 } from \"@dxos/log\";\nimport { ApiError, trace as Trace } from \"@dxos/protocols\";\nimport { Invitation, SpaceState } from \"@dxos/protocols/proto/dxos/client/services\";\nimport { trace } from \"@dxos/tracing\";\n\n// packages/sdk/client/src/echo/agent-query-source-provider.ts\nimport { Event } from \"@dxos/async\";\nimport { todo } from \"@dxos/debug\";\nimport { invariant } from \"@dxos/invariant\";\nimport { PublicKey } from \"@dxos/keys\";\nimport { log } from \"@dxos/log\";\nimport { QUERY_CHANNEL } from \"@dxos/protocols\";\nimport { QueryOptions } from \"@dxos/protocols/proto/dxos/echo/filter\";\nvar __dxlog_file = \"/home/runner/work/dxos/dxos/packages/sdk/client/src/echo/agent-query-source-provider.ts\";\nvar ERR_CLOSING = new Error();\nvar AgentQuerySourceProvider = class {\n  /**\n  * Constructor.\n  * @param _space Space instance that will be used for messaging with the agent through the gossip protocol.\n  */\n  constructor(_space) {\n    this._space = _space;\n    this._responsePromises = /* @__PURE__ */ new Map();\n    this._unsubscribe = void 0;\n  }\n  async open() {\n    this._unsubscribe = this._space.listen(QUERY_CHANNEL, (message) => this._handleMessage(message));\n  }\n  async close() {\n    this._unsubscribe?.();\n    this._responsePromises.forEach((promise) => promise.reject(ERR_CLOSING));\n    this._responsePromises.clear();\n  }\n  // TODO(burdon): Make async?\n  // TODO(burdon): Define return type.\n  _sendRequest(filter) {\n    const request = {\n      queryId: PublicKey.random().toHex(),\n      filter\n    };\n    this._space.postMessage(QUERY_CHANNEL, {\n      \"@type\": \"dxos.agent.query.QueryRequest\",\n      ...request\n    }).catch((error) => log.catch(error, void 0, {\n      F: __dxlog_file,\n      L: 54,\n      S: this,\n      C: (f, a) => f(...a)\n    }));\n    let cancelRequest;\n    return {\n      response: new Promise((resolve, reject) => {\n        invariant(request.queryId, void 0, {\n          F: __dxlog_file,\n          L: 59,\n          S: this,\n          A: [\n            \"request.queryId\",\n            \"\"\n          ]\n        });\n        this._responsePromises.set(request.queryId, {\n          resolve,\n          reject\n        });\n        cancelRequest = () => {\n          reject(new Error(\"Request cancelled.\"));\n          this._responsePromises.delete(request.queryId);\n        };\n      }),\n      cancelRequest: () => {\n        cancelRequest();\n      }\n    };\n  }\n  _handleMessage(message) {\n    if (message.payload[\"@type\"] !== \"dxos.agent.query.QueryResponse\") {\n      return;\n    }\n    const response = message.payload;\n    invariant(response.queryId, \"QueryId is undefined.\", {\n      F: __dxlog_file,\n      L: 78,\n      S: this,\n      A: [\n        \"response.queryId\",\n        \"'QueryId is undefined.'\"\n      ]\n    });\n    const responsePromise = this._responsePromises.get(response.queryId);\n    if (!responsePromise) {\n      log(\"Request for this response was canceled.\", {\n        response\n      }, {\n        F: __dxlog_file,\n        L: 81,\n        S: this,\n        C: (f, a) => f(...a)\n      });\n      return;\n    }\n    responsePromise.resolve(response);\n    this._responsePromises.delete(response.queryId);\n  }\n  create() {\n    return new AgentQuerySource({\n      sendRequest: this._sendRequest.bind(this)\n    });\n  }\n};\nvar AgentQuerySource = class {\n  constructor(_params) {\n    this._params = _params;\n    this._cancelPreviousRequest = void 0;\n    this.changed = new Event();\n  }\n  getResults() {\n    return this._results ?? [];\n  }\n  async run() {\n    return this._results ?? [];\n  }\n  update(filter) {\n    if (filter.options.dataLocation === void 0 || filter.options.dataLocation === QueryOptions.DataLocation.LOCAL) {\n      return;\n    }\n    this._results = void 0;\n    this.changed.emit();\n    if (this._cancelPreviousRequest) {\n      this._cancelPreviousRequest();\n    }\n    const startTime = Date.now();\n    const { response, cancelRequest } = this._params.sendRequest(filter.toProto());\n    this._cancelPreviousRequest = cancelRequest;\n    response.then((response2) => {\n      this._results = response2.results?.map((result) => {\n        const objSnapshot = response2.objects?.find((obj) => obj.objectId === result.id);\n        return {\n          id: result.id,\n          spaceKey: result.spaceKey,\n          object: objSnapshot && getEchoObjectFromSnapshot(objSnapshot),\n          match: {\n            rank: result.rank\n          },\n          resolution: {\n            source: \"remote\",\n            time: Date.now() - startTime\n          }\n        };\n      }) ?? [];\n      this.changed.emit();\n    }).catch((error) => error === ERR_CLOSING || log.catch(error, void 0, {\n      F: __dxlog_file,\n      L: 152,\n      S: this,\n      C: (f, a) => f(...a)\n    }));\n  }\n  close() {\n  }\n};\nvar getEchoObjectFromSnapshot = (objSnapshot) => {\n  invariant(objSnapshot.genesis, \"Genesis is undefined.\", {\n    F: __dxlog_file,\n    L: 161,\n    S: void 0,\n    A: [\n      \"objSnapshot.genesis\",\n      \"'Genesis is undefined.'\"\n    ]\n  });\n  invariant(objSnapshot.snapshot, \"Genesis model type is undefined.\", {\n    F: __dxlog_file,\n    L: 162,\n    S: void 0,\n    A: [\n      \"objSnapshot.snapshot\",\n      \"'Genesis model type is undefined.'\"\n    ]\n  });\n  return todo();\n};\n\n// packages/sdk/client/src/echo/space-list.ts\nfunction _ts_decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n    r = Reflect.decorate(decorators, target, key, desc);\n  else\n    for (var i = decorators.length - 1; i >= 0; i--)\n      if (d = decorators[i])\n        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nvar __dxlog_file2 = \"/home/runner/work/dxos/dxos/packages/sdk/client/src/echo/space-list.ts\";\nvar SpaceList = class extends MulticastObservable {\n  constructor(_serviceProvider, _echoClient, _getIdentityKey, _traceParent) {\n    const spacesStream = new PushStream();\n    super(spacesStream.observable, []);\n    this._serviceProvider = _serviceProvider;\n    this._echoClient = _echoClient;\n    this._getIdentityKey = _getIdentityKey;\n    this._traceParent = _traceParent;\n    this._defaultSpaceAvailable = new PushStream();\n    this._isReady = new MulticastObservable(this._defaultSpaceAvailable.observable, false);\n    this._spaceCreated = new Event2();\n    this._instanceId = PublicKey2.random().toHex();\n    this._spacesStream = spacesStream;\n  }\n  get _isReadyState() {\n    return this._isReady.get();\n  }\n  [inspect.custom]() {\n    return inspectObject(this);\n  }\n  toJSON() {\n    return {\n      spaces: this._value?.length\n    };\n  }\n  /**\n  * @internal\n  */\n  async _open() {\n    log2.trace(\"dxos.sdk.echo-proxy.open\", Trace.begin({\n      id: this._instanceId,\n      parentId: this._traceParent\n    }), {\n      F: __dxlog_file2,\n      L: 81,\n      S: this,\n      C: (f, a) => f(...a)\n    });\n    this._ctx = new Context({\n      onError: (error) => {\n        log2.catch(error, void 0, {\n          F: __dxlog_file2,\n          L: 84,\n          S: this,\n          C: (f, a) => f(...a)\n        });\n      }\n    });\n    invariant2(this._serviceProvider.services.SpacesService, \"SpacesService is not available.\", {\n      F: __dxlog_file2,\n      L: 88,\n      S: this,\n      A: [\n        \"this._serviceProvider.services.SpacesService\",\n        \"'SpacesService is not available.'\"\n      ]\n    });\n    invariant2(this._serviceProvider.services.InvitationsService, \"InvitationsService is not available.\", {\n      F: __dxlog_file2,\n      L: 89,\n      S: this,\n      A: [\n        \"this._serviceProvider.services.InvitationsService\",\n        \"'InvitationsService is not available.'\"\n      ]\n    });\n    this._invitationProxy = new InvitationsProxy(this._serviceProvider.services.InvitationsService, this._serviceProvider.services.IdentityService, () => ({\n      kind: Invitation.Kind.SPACE\n    }));\n    await this._invitationProxy.open();\n    const gotInitialUpdate = new Trigger();\n    const spacesStream = this._serviceProvider.services.SpacesService.querySpaces(void 0, {\n      timeout: RPC_TIMEOUT\n    });\n    spacesStream.subscribe((data) => {\n      let emitUpdate = false;\n      const newSpaces = this.get();\n      for (const space of data.spaces ?? []) {\n        if (this._ctx.disposed) {\n          return;\n        }\n        let spaceProxy = newSpaces.find(({ key }) => key.equals(space.spaceKey));\n        if (!spaceProxy) {\n          spaceProxy = new SpaceProxy(this._serviceProvider, space, this._echoClient);\n          spaceProxy._stateUpdate.on(this._ctx, () => {\n            this._spacesStream.next([\n              ...this.get()\n            ]);\n          });\n          void spaceProxy.waitUntilReady().then(() => {\n            if (spaceProxy && spaceProxy.state.get() === SpaceState.READY && this._getIdentityKey() && spaceProxy.properties[defaultKey] === this._getIdentityKey().toHex()) {\n              this._defaultSpaceAvailable.next(true);\n              this._defaultSpaceAvailable.complete();\n            }\n          }).catch((err) => err.message === \"Context disposed.\" || log2.catch(err, void 0, {\n            F: __dxlog_file2,\n            L: 134,\n            S: this,\n            C: (f, a) => f(...a)\n          }));\n          newSpaces.push(spaceProxy);\n          this._spaceCreated.emit(spaceProxy.key);\n          emitUpdate = true;\n        }\n        scheduleTask(this._ctx, async () => {\n          await spaceProxy._processSpaceUpdate(space);\n        });\n      }\n      gotInitialUpdate.wake();\n      if (emitUpdate) {\n        this._spacesStream.next([\n          ...newSpaces\n        ]);\n      }\n    });\n    this._ctx.onDispose(() => spacesStream.close());\n    const subscription = this._isReady.subscribe(async (ready) => {\n      if (!ready) {\n        return;\n      }\n      const agentQuerySourceProvider = new AgentQuerySourceProvider(this.default);\n      await agentQuerySourceProvider.open();\n      this._echoClient.graph.registerQuerySourceProvider(agentQuerySourceProvider);\n      this._ctx.onDispose(() => agentQuerySourceProvider.close());\n      subscription.unsubscribe();\n    });\n    this._ctx.onDispose(() => subscription.unsubscribe());\n    await gotInitialUpdate.wait();\n    log2.trace(\"dxos.sdk.echo-proxy.open\", Trace.end({\n      id: this._instanceId\n    }), {\n      F: __dxlog_file2,\n      L: 172,\n      S: this,\n      C: (f, a) => f(...a)\n    });\n  }\n  async setConfig(config) {\n    await this._serviceProvider.services.QueryService?.setConfig(config, {\n      timeout: 2e4\n    });\n  }\n  /**\n  * @internal\n  */\n  async _close() {\n    await this._ctx.dispose();\n    await Promise.all(this.get().map((space) => space._destroy()));\n    this._spacesStream.next([]);\n    this._isReady = new MulticastObservable(this._defaultSpaceAvailable.observable, false);\n    await this._invitationProxy?.close();\n    this._invitationProxy = void 0;\n  }\n  get isReady() {\n    return this._isReady;\n  }\n  get(spaceKey) {\n    if (!spaceKey) {\n      return this._value;\n    }\n    return this._value?.find(({ key }) => key.equals(spaceKey));\n  }\n  get _spaces() {\n    return this.get();\n  }\n  get default() {\n    const identityKey = this._getIdentityKey();\n    invariant2(identityKey, \"Identity must be set.\", {\n      F: __dxlog_file2,\n      L: 214,\n      S: this,\n      A: [\n        \"identityKey\",\n        \"'Identity must be set.'\"\n      ]\n    });\n    const space = this.get().find((space2) => space2.state.get() === SpaceState.READY && space2.properties[defaultKey] === identityKey.toHex());\n    invariant2(space, \"Default space is not yet available. Use `client.spaces.isReady` to wait for the default space.\", {\n      F: __dxlog_file2,\n      L: 218,\n      S: this,\n      A: [\n        \"space\",\n        \"'Default space is not yet available. Use `client.spaces.isReady` to wait for the default space.'\"\n      ]\n    });\n    return space;\n  }\n  async create(meta) {\n    invariant2(this._serviceProvider.services.SpacesService, \"SpacesService is not available.\", {\n      F: __dxlog_file2,\n      L: 223,\n      S: this,\n      A: [\n        \"this._serviceProvider.services.SpacesService\",\n        \"'SpacesService is not available.'\"\n      ]\n    });\n    const traceId = PublicKey2.random().toHex();\n    log2.trace(\"dxos.sdk.echo-proxy.create-space\", Trace.begin({\n      id: traceId\n    }), {\n      F: __dxlog_file2,\n      L: 225,\n      S: this,\n      C: (f, a) => f(...a)\n    });\n    const space = await this._serviceProvider.services.SpacesService.createSpace(void 0, {\n      timeout: RPC_TIMEOUT\n    });\n    await this._spaceCreated.waitForCondition(() => {\n      return this.get().some(({ key }) => key.equals(space.spaceKey));\n    });\n    const spaceProxy = this.get().find(({ key }) => key.equals(space.spaceKey)) ?? failUndefined();\n    await spaceProxy._databaseInitialized.wait({\n      timeout: CREATE_SPACE_TIMEOUT\n    });\n    spaceProxy.db.add(create(Properties, meta ?? {}));\n    await spaceProxy.db.flush();\n    await spaceProxy._initializationComplete.wait();\n    log2.trace(\"dxos.sdk.echo-proxy.create-space\", Trace.end({\n      id: traceId\n    }), {\n      F: __dxlog_file2,\n      L: 238,\n      S: this,\n      C: (f, a) => f(...a)\n    });\n    return spaceProxy;\n  }\n  /**\n  * @internal\n  */\n  async clone(snapshot) {\n    return todo2();\n  }\n  join(invitation) {\n    if (!this._invitationProxy) {\n      throw new ApiError(\"Client not open.\");\n    }\n    log2(\"accept invitation\", invitation, {\n      F: __dxlog_file2,\n      L: 268,\n      S: this,\n      C: (f, a) => f(...a)\n    });\n    return this._invitationProxy.join(invitation);\n  }\n  /**\n  * Query all spaces.\n  * @param filter\n  * @param options\n  */\n  query(filter, options) {\n    return this._echoClient.graph.query(filter, options);\n  }\n};\n_ts_decorate([\n  trace.info()\n], SpaceList.prototype, \"_isReadyState\", null);\n_ts_decorate([\n  trace.info({\n    depth: null\n  })\n], SpaceList.prototype, \"toJSON\", null);\n_ts_decorate([\n  trace.span()\n], SpaceList.prototype, \"_open\", null);\n_ts_decorate([\n  trace.span()\n], SpaceList.prototype, \"_close\", null);\n_ts_decorate([\n  trace.info()\n], SpaceList.prototype, \"_spaces\", null);\n_ts_decorate([\n  trace.info()\n], SpaceList.prototype, \"default\", null);\nSpaceList = _ts_decorate([\n  trace.resource()\n], SpaceList);\nexport {\n  SpaceList\n};\n//# sourceMappingURL=space-list-GVMAD426.mjs.map\n"],"names":["QUERY_CHANNEL","__dxlog_file","ERR_CLOSING","AgentQuerySourceProvider","_space","message","promise","filter","request","PublicKey","error","log","f","cancelRequest","resolve","reject","invariant","response","responsePromise","a","AgentQuerySource","_params","Event","QueryOptions","startTime","response2","result","objSnapshot","obj","getEchoObjectFromSnapshot","todo","_ts_decorate","decorators","target","key","desc","c","r","d","i","__dxlog_file2","SpaceList","MulticastObservable","_serviceProvider","_echoClient","_getIdentityKey","_traceParent","spacesStream","PushStream","Event2","PublicKey2","inspect","inspectObject","log2","Trace","Context","invariant2","InvitationsProxy","Invitation","gotInitialUpdate","Trigger","RPC_TIMEOUT","data","emitUpdate","newSpaces","space","spaceProxy","SpaceProxy","SpaceState","defaultKey","err","scheduleTask","subscription","ready","agentQuerySourceProvider","config","spaceKey","identityKey","space2","meta","traceId","failUndefined","CREATE_SPACE_TIMEOUT","create","Properties","snapshot","todo2","invitation","ApiError","options","trace"],"mappings":"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","x_google_ignoreList":[0,1]}